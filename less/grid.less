// ==========================================================================
// Grid
// ==========================================================================
// Provides:
//     .initializeGrid ();
//     .updateGrid (@grid-size);
//     .gridMods (@grid-size);
// ==========================================================================
.initializeGrid () {

    .wrapper {
        margin-right: auto;
        margin-left: auto;
        -webkit-box-sizing: border-box;
           -moz-box-sizing: border-box;
                box-sizing: border-box;
    }

    .grid {
        display: flex;
        flex-wrap: wrap;
        list-style: none;
        margin: 0;
        padding: 0;

        &__item {
            width: 100%;
            -webkit-box-sizing: border-box;
               -moz-box-sizing: border-box;
                    box-sizing: border-box;
        }
    }
}

//
// The grid is expected to change at many breakpoints. At each time calling
// this to recalculate the correct margins and paddings.
// --------------------------------------------------------------------------
.updateGrid (@grid-size) {

    @gutter-width: extract(@grid-size, 3);

    .grid {
        margin-right: (@gutter-width / -2);
        margin-left: (@gutter-width / -2);

        &__item {
            padding-right: (@gutter-width / 2);
            padding-left: (@gutter-width / 2);
        }
    }

    .freshenGrid();

    .wrapper {
        padding-right: (@gutter-width / 2);
        padding-left: (@gutter-width / 2);
    }
}

//
// Makes sure grid item are visible at each breakpoint by default
// --------------------------------------------------------------------------
.freshenGrid () {
    .grid__item {
        display: block;
    }
}

//
// All special grid features, or as we call them - modifications, can be set
// or reset to the default at any device independently.
// --------------------------------------------------------------------------
.modsOfGrid (@grid-size) {

    @modifier: extract(@grid-size, 4);

    .grid {
        // Obverse
        &--obv@{modifier} {
            flex-direction: row;
        }

        // Reverse
        &--rev@{modifier} {
            flex-direction: row-reverse;
        }

        // Left
        &--left@{modifier} {
            justify-content: flex-start;
        }

        // Right
        &--right@{modifier} {
            justify-content: flex-end;
        }

        // Center
        &--center@{modifier} {
            justify-content: center;
        }

        // Top
        &--top@{modifier} {
            align-items: flex-start;
        }

        // Middle
        &--middle@{modifier} {
            align-items: center;
        }

        // Bottom
        &--bottom@{modifier} {
            align-items: flex-end;
        }
    }
}

